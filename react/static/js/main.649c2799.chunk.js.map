{"version":3,"sources":["component/ColorBox/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ColorBox","useState","initColor","localStorage","getItem","console","log","color","setColor","className","style","backgroundColor","onClick","newColor","Math","trunc","random","setItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAsCeA,MA7Bf,WAAoB,MAIOC,oBAAS,WAClC,IAAMC,EAAYC,aAAaC,QAAQ,cAAgB,QAEvD,OADAC,QAAQC,IAAIJ,GACLA,KAPW,mBAIZK,EAJY,KAILC,EAJK,KAkBnB,OACC,qBACCC,UAAU,YACVC,MAAO,CAAEC,gBAAiBJ,GAC1BK,QAZF,WAEC,IAAMC,EAjBY,CAAC,MAAO,QAAS,QAChBC,KAAKC,MAAsB,EAAhBD,KAAKE,WAiBnCR,EAASK,GAETV,aAAac,QAAQ,YAAaJ,OCXrBK,MAVf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,uCACA,cAAC,EAAD,QCKSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.649c2799.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ColorBox.scss';\r\n\r\nfunction getRandomColor() {\r\n\tconst COLOR_LIST = ['red', 'green', 'blue'];\r\n\tconst randomIndex = Math.trunc(Math.random() * 3);\r\n\treturn COLOR_LIST[randomIndex];\r\n}\r\n\r\nfunction ColorBox() {\r\n\t// const initColor = localStorage.getItem('box_color') || 'black';\r\n\t// console.log(initColor);\r\n\t// const [color, setColor] = useState(initColor);\r\n\tconst [color, setColor] = useState(() => {\r\n\t\tconst initColor = localStorage.getItem('box_color') || 'black';\r\n\t\tconsole.log(initColor);\r\n\t\treturn initColor;\r\n\t})\r\n\r\n\tfunction handleBoxClick() {\r\n\t\t// get random color --> set color\r\n\t\tconst newColor = getRandomColor();\r\n\t\tsetColor(newColor);\r\n\r\n\t\tlocalStorage.setItem('box_color', newColor);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"color-box\"\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\tonClick={handleBoxClick}\r\n\t\t>\r\n\t\t\t{/* COLOR BOX */}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ColorBox;","import './App.scss';\r\nimport ColorBox from './component/ColorBox';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Hello</h1>\r\n      <ColorBox />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}